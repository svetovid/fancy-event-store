<?xml version="1.0" encoding="utf-8"?>
<configuration>
    <configSections>
        <section name="akka" type="Akka.Configuration.Hocon.AkkaConfigurationSection, Akka" />
    </configSections>
    <akka>
        <hocon>
            <![CDATA[
                akka {
				    actor {
                        provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"
                        
                        serializers {
                            hyperion = "Akka.Serialization.HyperionSerializer, Akka.Serialization.Hyperion"
                        }
                        serialization-bindings {
                            "System.Object" = hyperion
                        }
                        serialization-identifiers {
                            "Akka.Serialization.HyperionSerializer, Akka.Serialization.Hyperion" = 13
                        }
                    }
                    
                    cluster {
                        auto-down-unreachable-after = 5s
                        
                        sharding {
                            journal-plugin-id = "akka.persistence.journal.sharding"
                            snapshot-plugin-id = "akka.persistence.snapshot-store.sharding"
                        
                            least-shard-allocation-strategy.rebalance-threshold = 3
                        }
                    }
                    persistence {
	                    journal {
	                        plugin = "akka.persistence.journal.sql-server"
		                    sql-server {
			                    # qualified type name of the SQL Server persistence journal actor
			                    class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"

			                    # dispatcher used to drive journal actor
			                    plugin-dispatcher = "akka.actor.default-dispatcher"

			                    # connection string used for database access
			                    connection-string = "Server=.;Database=wp_transactions;Integrated Security=SSPI"

			                    # default SQL commands timeout
			                    connection-timeout = 30s

			                    # SQL server schema name to table corresponding with persistent journal
			                    schema-name = dbo

			                    # SQL server table corresponding with persistent journal
			                    table-name = EventJournal

			                    # should corresponding journal table be initialized automatically
			                    auto-initialize = on

			                    # timestamp provider used for generation of journal entries timestamps
			                    timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"

			                    # metadata table
			                    metadata-table-name = Metadata
		                    }
                            
                            sharding {
                                connection-string = "Server=.;Database=wp_transactions;Integrated Security=SSPI"
                                auto-initialize = on
                                plugin-dispatcher = "akka.actor.default-dispatcher"
                                class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"
                                connection-timeout = 30s
                                schema-name = dbo
                                table-name = ShardingJournal
                                timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"
                                metadata-table-name = ShardingMetadata
                            }
	                    }
                    
                        snapshot-store {
	                        plugin = "akka.persistence.snapshot-store.sql-server"
		                    sql-server {

			                    # qualified type name of the SQL Server persistence journal actor
			                    class = "Akka.Persistence.SqlServer.Snapshot.SqlServerSnapshotStore, Akka.Persistence.SqlServer"

			                    # dispatcher used to drive journal actor
			                    plugin-dispatcher = ""akka.actor.default-dispatcher""

			                    # connection string used for database access
			                    connection-string = "Server=.;Database=wp_transactions;Integrated Security=SSPI"

			                    # default SQL commands timeout
			                    connection-timeout = 30s

			                    # SQL server schema name to table corresponding with persistent journal
			                    schema-name = dbo

			                    # SQL server table corresponding with persistent journal
			                    table-name = SnapshotStore

			                    # should corresponding journal table be initialized automatically
			                    auto-initialize = on
		                    }
                            
                            sharding {
                                class = "Akka.Persistence.SqlServer.Snapshot.SqlServerSnapshotStore, Akka.Persistence.SqlServer"
                                plugin-dispatcher = "akka.actor.default-dispatcher"
                                connection-string = "Server=.;Database=wp_transactions;Integrated Security=SSPI"
                                connection-timeout = 30s
                                schema-name = dbo
                                table-name = ShardingSnapshotStore
                                auto-initialize = on
                            }
	                    }
                    }
                    
                    remote {
                        dot-netty.tcp {
							transport-class = "Akka.Remote.Transport.DotNetty.TcpTransport, Akka.Remote"
							applied-adapters = []
							transport-protocol = tcp
                            hostname = "127.0.0.1"
                            port = 0
                        }
                    }

                    cluster {
                        seed-nodes = ["akka.tcp://ras@127.0.0.1:4053", "akka.tcp://ras@127.0.0.1:4044"] 
                        roles = [persistor]
                    }
               }
			]]>
        </hocon>
    </akka>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.2" />
    </startup>
  
</configuration>
